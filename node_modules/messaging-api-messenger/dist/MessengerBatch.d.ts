import { AirlineBoardingPassAttributes, AirlineCheckinAttributes, AirlineItineraryAttributes, AirlineUpdateAttributes, Attachment, BatchItem, BatchRequestOptions, MediaAttachmentPayload, MediaElement, Message, ReceiptAttributes, Recipient, SendOption, SenderAction, TemplateAttachmentPayload, TemplateButton, TemplateElement, UserID } from './MessengerTypes';
declare function sendRequest(body: object, options?: BatchRequestOptions): BatchItem;
declare function sendMessage(idOrRecipient: UserID | Recipient, msg: Message, options?: SendOption & BatchRequestOptions): BatchItem;
declare function sendText(recipient: UserID | Recipient, text: string, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendAttachment(recipient: UserID | Recipient, attachment: Attachment, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendAudio(recipient: UserID | Recipient, audio: string | MediaAttachmentPayload, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendImage(recipient: UserID | Recipient, image: string | MediaAttachmentPayload, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendVideo(recipient: UserID | Recipient, video: string | MediaAttachmentPayload, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendFile(recipient: UserID | Recipient, file: string | MediaAttachmentPayload, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendTemplate(recipient: UserID | Recipient, payload: TemplateAttachmentPayload, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendButtonTemplate(recipient: UserID | Recipient, text: string, buttons: TemplateButton[], options: SendOption & BatchRequestOptions): BatchItem;
declare function sendGenericTemplate(recipient: UserID | Recipient, elements: TemplateElement[], { image_aspect_ratio, ...options }?: {
    image_aspect_ratio?: 'horizontal' | 'square';
} & SendOption): BatchItem;
declare function sendReceiptTemplate(recipient: UserID | Recipient, attrs: ReceiptAttributes, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendMediaTemplate(recipient: UserID | Recipient, elements: MediaElement[], options: SendOption & BatchRequestOptions): BatchItem;
declare function sendAirlineBoardingPassTemplate(recipient: UserID | Recipient, attrs: AirlineBoardingPassAttributes, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendAirlineCheckinTemplate(recipient: UserID | Recipient, attrs: AirlineCheckinAttributes, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendAirlineItineraryTemplate(recipient: UserID | Recipient, attrs: AirlineItineraryAttributes, options: SendOption & BatchRequestOptions): BatchItem;
declare function sendAirlineUpdateTemplate(recipient: UserID | Recipient, attrs: AirlineUpdateAttributes, options: SendOption & BatchRequestOptions): BatchItem;
declare function getUserProfile(userId: string, options?: {
    access_token?: string;
} & BatchRequestOptions): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
};
declare function sendSenderAction(idOrRecipient: UserID | Recipient, action: SenderAction, options?: SendOption & BatchRequestOptions): BatchItem;
declare function typingOn(idOrRecipient: UserID | Recipient, options: SendOption & BatchRequestOptions): BatchItem;
declare function typingOff(idOrRecipient: UserID | Recipient, options: SendOption & BatchRequestOptions): BatchItem;
declare function markSeen(idOrRecipient: UserID | Recipient, options: SendOption & BatchRequestOptions): BatchItem;
declare function passThreadControl(recipientId: string, targetAppId: number, metadata: string, options?: {
    access_token?: string;
} & BatchRequestOptions): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
    body: {
        recipient: {
            id: string;
        };
        target_app_id: number;
        metadata: string;
    };
};
declare function passThreadControlToPageInbox(recipientId: string, metadata: string, options?: {
    access_token?: string;
}): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
    body: {
        recipient: {
            id: string;
        };
        target_app_id: number;
        metadata: string;
    };
};
declare function takeThreadControl(recipientId: string, metadata: string, options?: {
    access_token?: string;
} & BatchRequestOptions): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
    body: {
        recipient: {
            id: string;
        };
        metadata: string;
    };
};
declare function requestThreadControl(recipientId: string, metadata: string, options?: {
    access_token?: string;
} & BatchRequestOptions): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
    body: {
        recipient: {
            id: string;
        };
        metadata: string;
    };
};
declare function getThreadOwner(recipientId: string, options?: {
    access_token?: string;
} & BatchRequestOptions): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
    responseAccessPath: string;
};
declare function associateLabel(userId: UserID, labelId: number, options?: {
    access_token?: string;
} & BatchRequestOptions): {
    name?: string | undefined;
    depends_on?: string | undefined;
    method: string;
    relative_url: string;
    body: {
        user: string;
    };
};
declare function dissociateLabel(userId: UserID, labelId: number, options?: {
    access_token?: string;
} & BatchRequestOptions): object;
declare function getAssociatedLabels(userId: UserID, options?: {
    access_token?: string;
} & BatchRequestOptions): object;
declare const MessengerBatch: {
    sendRequest: typeof sendRequest;
    sendMessage: typeof sendMessage;
    sendText: typeof sendText;
    sendAttachment: typeof sendAttachment;
    sendAudio: typeof sendAudio;
    sendImage: typeof sendImage;
    sendVideo: typeof sendVideo;
    sendFile: typeof sendFile;
    sendTemplate: typeof sendTemplate;
    sendButtonTemplate: typeof sendButtonTemplate;
    sendGenericTemplate: typeof sendGenericTemplate;
    sendListTemplate: (...args: any[]) => any;
    sendOpenGraphTemplate: (...args: any[]) => any;
    sendReceiptTemplate: typeof sendReceiptTemplate;
    sendMediaTemplate: typeof sendMediaTemplate;
    sendAirlineBoardingPassTemplate: typeof sendAirlineBoardingPassTemplate;
    sendAirlineCheckinTemplate: typeof sendAirlineCheckinTemplate;
    sendAirlineItineraryTemplate: typeof sendAirlineItineraryTemplate;
    sendAirlineUpdateTemplate: typeof sendAirlineUpdateTemplate;
    getUserProfile: typeof getUserProfile;
    sendSenderAction: typeof sendSenderAction;
    typingOn: typeof typingOn;
    typingOff: typeof typingOff;
    markSeen: typeof markSeen;
    passThreadControl: typeof passThreadControl;
    passThreadControlToPageInbox: typeof passThreadControlToPageInbox;
    takeThreadControl: typeof takeThreadControl;
    requestThreadControl: typeof requestThreadControl;
    getThreadOwner: typeof getThreadOwner;
    associateLabel: typeof associateLabel;
    dissociateLabel: typeof dissociateLabel;
    getAssociatedLabels: typeof getAssociatedLabels;
};
export default MessengerBatch;
//# sourceMappingURL=MessengerBatch.d.ts.map
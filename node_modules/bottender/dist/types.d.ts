import Context from './context/Context';
export declare type Action = (context: Context, props?: Props) => void | Action | Promise<Action | void>;
export declare type Props = {
    next?: Action;
    error?: Error;
    [key: string]: any;
};
export declare type Plugin = (context: Context) => void;
export declare enum Channel {
    Messenger = "messenger",
    Line = "line",
    Slack = "slack",
    Telegram = "telegram",
    Viber = "viber"
}
export declare enum SessionDriver {
    Memory = "memory",
    File = "file",
    Redis = "redis",
    Mongo = "mongo"
}
export declare type BottenderConfig = {
    plugins?: any[];
    session?: {
        driver: SessionDriver;
        expiresIn?: number;
        stores: {
            memory: {
                maxSize?: number;
            };
            file: {
                dirname?: string;
            };
            redis: {
                port?: number;
                host?: string;
                password?: string;
                db: number;
            };
            mongo: {
                url: string;
                collectionName?: string;
            };
        };
    };
    initialState: Record<string, any>;
    channels?: {
        [Channel.Messenger]: {
            enabled: boolean;
            path: string;
            accessToken: string;
            verifyToken: string;
            appId: string;
            appSecret: string;
        };
        [Channel.Line]: {
            enabled: boolean;
            path: string;
            accessToken: string;
            channelSecret: string;
        };
        [Channel.Telegram]: {
            enabled: boolean;
            path: string;
            accessToken: string;
        };
        [Channel.Slack]: {
            enabled: boolean;
            path: string;
            accessToken: string;
            verificationToken: string;
        };
        [Channel.Viber]: {
            enabled: boolean;
            path: string;
            accessToken: string;
            sender: {
                name: string;
            };
        };
    };
};
//# sourceMappingURL=types.d.ts.map
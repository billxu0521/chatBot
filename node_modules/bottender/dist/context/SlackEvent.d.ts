import { Event } from './Event';
export declare type EventAPITypes = 'message' | 'app_uninstalled' | 'channel_archive' | 'channel_created' | 'channel_deleted' | 'channel_history_changed' | 'channel_rename' | 'channel_unarchive' | 'dnd_updated' | 'dnd_updated_user' | 'email_domain_changed' | 'emoji_changed' | 'file_change' | 'file_comment_added' | 'file_comment_deleted' | 'file_comment_edited' | 'file_created' | 'file_deleted' | 'file_public' | 'file_shared' | 'file_unshared' | 'grid_migration_finished' | 'grid_migration_started' | 'group_archive' | 'group_close' | 'group_history_changed' | 'group_open' | 'group_rename' | 'group_unarchive' | 'im_close' | 'im_created' | 'im_history_changed' | 'im_open' | 'link_shared' | 'member_joined_channel' | 'member_left_channel' | 'pin_added' | 'pin_removed' | 'reaction_added' | 'reaction_removed' | 'star_added' | 'star_removed' | 'subteam_created' | 'subteam_members_changed' | 'subteam_self_added' | 'subteam_self_removed' | 'subteam_updated' | 'team_domain_change' | 'team_join' | 'team_rename' | 'tokens_revoked' | 'url_verification' | 'user_change';
export declare type Message = {
    type: EventAPITypes;
    subtype?: string;
    channel: string;
    user: string;
    text: string;
    ts: string;
    thread_ts?: string;
    bot_id?: string;
};
export declare type InteractiveMessageEvent = {
    type: 'interactive_message';
    actions: {}[];
    callback_id: string;
    team: {
        id: string;
        domain: string;
    };
    channel: {
        id: string;
        name: string;
    };
    user: {
        id: string;
        name: string;
    };
    action_ts: string;
    message_ts: string;
    attachment_id: string;
    token: string;
    original_message: Message;
    response_url: string;
    trigger_id: string;
    thread_ts?: string;
    bot_id?: string;
};
export declare type SlackRawEvent = Message | InteractiveMessageEvent;
export default class SlackEvent implements Event<SlackRawEvent> {
    _rawEvent: SlackRawEvent;
    constructor(rawEvent: SlackRawEvent);
    readonly rawEvent: SlackRawEvent;
    readonly isMessage: boolean;
    readonly isChannelsMessage: boolean;
    readonly isGroupsMessage: boolean;
    readonly isImMessage: boolean;
    readonly isMpimMessage: boolean;
    readonly message: Message | null;
    readonly isText: boolean;
    readonly text: string | null;
    readonly isInteractiveMessage: boolean;
    readonly callbackId: string | null;
    readonly action: {} | null;
}
//# sourceMappingURL=SlackEvent.d.ts.map
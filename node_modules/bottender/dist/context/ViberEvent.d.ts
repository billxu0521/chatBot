import { Event } from './Event';
declare type ViberUser = {
    id: string;
    name: string;
    avatar: string;
    country: string;
    language: string;
    api_version: number;
};
declare type SubscribedEvent = {
    event: 'subscribed';
    timestamp: number;
    user: ViberUser;
    message_token: number;
};
declare type UnsubscribedEvent = {
    event: 'unsubscribed';
    timestamp: number;
    user_id: string;
    message_token: number;
};
declare type ConversationStartedEvent = {
    event: 'conversation_started';
    timestamp: number;
    message_token: number;
    type: 'open';
    context: string;
    user: ViberUser;
    subscribed: false;
};
declare type DeliveredEvent = {
    event: 'delivered';
    timestamp: number;
    message_token: number;
    user_id: string;
};
declare type SeenEvent = {
    event: 'seen';
    timestamp: number;
    message_token: number;
    user_id: string;
};
declare type FailedEvent = {
    event: 'failed';
    timestamp: number;
    message_token: number;
    user_id: string;
    desc: string;
};
declare type ViberMessage = {
    type: 'text' | 'picture' | 'video' | 'file' | 'sticker' | 'contact' | 'url' | 'location';
    text?: string;
    media?: string;
    location?: {
        lat: string;
        lot: string;
    };
    contact?: {
        name: string;
        phone_number: string;
    };
    tracking_data?: string;
    file_name?: string;
    file_size?: number;
    duration?: number;
    sticker_id?: number;
};
declare type MessageEvent = {
    event: 'message';
    timestamp: number;
    message_token: number;
    sender: ViberUser;
    message: ViberMessage;
};
export declare type ViberRawEvent = SubscribedEvent | UnsubscribedEvent | ConversationStartedEvent | DeliveredEvent | SeenEvent | FailedEvent | MessageEvent;
export default class ViberEvent implements Event<ViberRawEvent> {
    _rawEvent: ViberRawEvent;
    constructor(rawEvent: ViberRawEvent);
    readonly rawEvent: ViberRawEvent;
    readonly isMessage: boolean;
    readonly message: ViberMessage | null;
    readonly isText: boolean;
    readonly text: string | null;
    readonly isPicture: boolean;
    readonly picture: string | null;
    readonly isVideo: boolean;
    readonly video: string | null;
    readonly isFile: boolean;
    readonly file: string | null;
    readonly isSticker: boolean;
    readonly sticker: number | null;
    readonly isContact: boolean;
    readonly contact: Record<string, any> | null;
    readonly isURL: boolean;
    readonly url: string | null;
    readonly isLocation: boolean;
    readonly location: Record<string, any> | null;
    readonly isSubscribed: boolean;
    readonly subscribed: SubscribedEvent | null;
    readonly isUnsubscribed: boolean;
    readonly unsubscribed: UnsubscribedEvent | null;
    readonly isConversationStarted: boolean;
    readonly conversationStarted: ConversationStartedEvent | null;
    readonly isDelivered: boolean;
    readonly delivered: DeliveredEvent | null;
    readonly isSeen: boolean;
    readonly seen: SeenEvent | null;
    readonly isFailed: boolean;
    readonly failed: FailedEvent | null;
}
export {};
//# sourceMappingURL=ViberEvent.d.ts.map